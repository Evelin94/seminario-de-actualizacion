-- MySQL Script generated by MySQL Workbench
-- Sat Jun 15 19:03:03 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema login
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema login
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `login` DEFAULT CHARACTER SET utf8 ;
USE `login` ;

-- -----------------------------------------------------
-- Table `login`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `login`.`user` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idUser_UNIQUE` (`id` ASC),
  UNIQUE INDEX `Name_UNIQUE` (`name` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `login`.`group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `login`.`group` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idGroup_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `login`.`group-user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `login`.`group-user` (
  `Id` INT NOT NULL,
  `group_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`Id`, `group_id`, `user_id`),
  INDEX `fk_group-user_group1_idx` (`group_id` ASC),
  INDEX `fk_group-user_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_group-user_group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `login`.`group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_group-user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `login`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `login`.`action`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `login`.`action` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idAction_UNIQUE` (`id` ASC),
  UNIQUE INDEX `Name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `login`.`group-action`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `login`.`group-action` (
  `Id` INT NOT NULL,
  `group_id` INT NOT NULL,
  `action_id` INT NOT NULL,
  PRIMARY KEY (`Id`, `group_id`, `action_id`),
  INDEX `fk_group-action_group1_idx` (`group_id` ASC),
  INDEX `fk_group-action_action1_idx` (`action_id` ASC),
  CONSTRAINT `fk_group-action_group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `login`.`group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_group-action_action1`
    FOREIGN KEY (`action_id`)
    REFERENCES `login`.`action` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `login`.`session-user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `login`.`session-user` (
  `id` INT NOT NULL,
  `estado` TINYINT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_session-user_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_session-user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `login`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `login` ;

-- -----------------------------------------------------
-- Placeholder table for view `login`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `login`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `login`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `login`.`view1`;
USE `login`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
